# =============================================
# SHARED MELODY - DOCKER COMPOSE OVERRIDE
# Development Environment Configuration
# =============================================

version: '3.8'

services:
  # =============================================
  # BACKEND - Development Configuration
  # =============================================
  backend:
    build:
      target: build  # Use build stage instead of production
    environment:
      NODE_ENV: development
      # Enable debug logging
      DEBUG: "app:*"
    volumes:
      # Mount source code for hot reloading
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
    command: npm run dev
    ports:
      - "3001:3001"  # Expose backend port for direct access

  # =============================================
  # FRONTEND - Development Configuration  
  # =============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: build  # Use build stage for development
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Enable polling for file watching in containers
      - REACT_APP_API_URL=http://localhost:3001
    volumes:
      # Mount source code for hot reloading
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
    command: npm start
    ports:
      - "3000:3000"  # Use development server instead of nginx

  # =============================================
  # REDIS - Development Configuration
  # =============================================
  redis:
    # Use less secure password for development
    command: redis-server --appendonly yes --requirepass redis_dev_password
    environment:
      REDIS_PASSWORD: redis_dev_password
    ports:
      - "6379:6379"  # Expose for direct redis access